doctype html
html
	head
		title= GPS
		link(rel='stylesheet' type='text/css' href='/css/base.css')
		script(type='text/javascript')
		
	body
		#titleheader
	

		#timeslot
		p
		#timeslot2

		table#fancytable
			tr
				th Name
				th PRN
				th Elevation
				th Azimuth
				th Status
				th Tracking
		table#fancytable2
			tr
				th Fix
				th Sats Visible
				th Sats Active 
				th Lat
				th Long
				th Altitude
				th pdop
				th hdop
				th vdop

script.
	var cp = '#{clientpath}';
	var SatData = JSON.parse('!{lib}');

	//console.log('SATDATA', SatData['13']['Name']);
	var ws = new WebSocket(cp);
	//- event emmited when connected
	ws.onopen = function () {
		//console.log('Connected to server');
		//- sending a send event to websocket server
		ws.send(JSON.stringify('webclient'));
		//console.log('Sent a message');
	}
	
	var OldSatInfo = 0;
	var OldGPSInfo = 0;

	function DrawSatTable (data) {
		//console.log("REDRAWING TABLE!!\n");
		var table = document.getElementById("fancytable");
		for (i = table.rows.length - 1; i > 0; i --) {
			table.deleteRow(i);
		}					
		//create 1 row for each satellite
		var count = 1; 
		data.satsVisible.forEach(function(entry) {
			var row = table.insertRow();
			try {
				var URL = '<a href="https://n2yo.com/satellite/?s=' + SatData[entry.prn]['NORAD_ID'] + '"target="__blank">' + SatData[entry.prn]['Name'] + '</a>';
			} catch (error) {
				URL = "UNKNOWN";
			}
			var cell1 = row.insertCell(0).innerHTML = URL;
			var cell2 = row.insertCell(1).innerHTML = entry.prn;
			var cell3 = row.insertCell(2).innerHTML = entry.elevation;
			var cell4 = row.insertCell(3).innerHTML = entry.azimuth;
			var cell5 = row.insertCell(4).innerHTML = entry.status;
			var cell6 = row.insertCell(5);
			if (data.satsActive.includes(entry.prn)) {
				cell6.innerHTML = "Active";
			} else {
				cell6.innerHTML = "Inactive";
			}
					
		});
	}

	function DrawGPSTable (data) {
		//console.log("REDRAWING GPS TABLE\n");
		var table = document.getElementById("fancytable2");
		for (i = table.rows.length - 1; i > 0; i --) {
			table.deleteRow(i);
		}	
		var row = table.insertRow();
		row.insertCell(0).innerHTML = data.fix;
		row.insertCell(1).innerHTML = data.satsVisible.length;
		row.insertCell(2).innerHTML = data.satsActive.length;
		row.insertCell(3).innerHTML = data.lat;
		row.insertCell(4).innerHTML = data.lon;
		row.insertCell(5).innerHTML = data.alt;
		row.insertCell(6).innerHTML = data.pdop;
		row.insertCell(7).innerHTML = data.hdop;
		row.insertCell(8).innerHTML = data.vdop;

	}

	ws.onmessage = function (ev) {
		if (ev.data != 'Connection established!') {
			//console.log(JSON.parse(ev.data));
			var data = JSON.parse(ev.data);
			console.log(data);
			var ts = document.getElementById('timeslot').innerHTML = 'GPS Time:  ' + data.time;
			var ts2 = document.getElementById('timeslot2').innerHTML = 'Local Time:  ' + data.time2;
			var CurrentSatInfo = data.satsVisible;
			var CurrentGPSInfo = data.pdop;
			//console.log("OLD Info: ", OldSatInfo);
			//console.log("NEW Info: ", CurrentSatInfo);	
			if (JSON.stringify(OldSatInfo) != JSON.stringify(CurrentSatInfo)) {
				OldSatInfo = CurrentSatInfo;
				DrawSatTable(data);
				
			}
			if (JSON.stringify(OldGPSInfo) != JSON.stringify(CurrentGPSInfo)) {
				OldGPSInfo = CurrentGPSInfo;
				DrawGPSTable(data);
				
			}
				
						
		}
	}

